% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ratioScales.R
\name{breaks_divMult}
\alias{breaks_divMult}
\title{Compute breaks for ratio scale}
\usage{
breaks_divMult(n = 6, nmin = 5, anchor = TRUE, splits = 1, base = exp(1))
}
\arguments{
\item{n}{Scalar, target number of breaks}

\item{nmin}{Scalar, forced minimum number of breaks}

\item{anchor}{NULL or scalar, value to include as a reference point (usually
1)}

\item{splits}{Integer, one of \code{c(1,2,3)}. How many tick marks per
"decade?"}

\item{base}{a positive or complex number: the base with respect to which
    logarithms are computed.  Defaults to \eqn{e}=\code{exp(1)}.}
}
\value{
Vector of values to generate axis breaks
}
\description{
Compute breaks for ratio scale
}
\examples{
y <- exp(seq(-2,5, length.out = 10))
v <- log(y) # data or data range
n <- 5

# axisTicks takes giant steps, returns values way beyond data
grDevices::axisTicks(nint = n, log = TRUE, usr = range(v))
# breaks_divMult gives ~n breaks evenly within the data
breaks_divMult(n = n)(v = y)

# if 1 is lower limit, only positive log(breaks)
breaks_divMult()(c(1, 11))
# ditto, only negative log(breaks) if 1 is upper limit
breaks_divMult()(c(0.04, 1))

# expanding range on one side of 1 doesn't leave the other side behind
breaks_divMult()(c(0.04, 2.2))
breaks_divMult()(c(0.04, 220))
breaks_divMult()(c(0.04, 2200))

x <- 1:10
dat <- data.frame(x, y)
dat \%>\% ggplot2::ggplot(ggplot2::aes(x, y))+
     ggplot2::geom_point()+
     ggplot2::geom_hline(yintercept = 1, linewidth = 0.2) +
     ggplot2::scale_y_continuous(
     trans = "log"
     , breaks = breaks_divMult()
     , labels = label_divMult()
     )
}
\concept{breaking}
