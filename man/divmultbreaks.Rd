% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ratioScales.R
\name{divmultBreaks}
\alias{divmultBreaks}
\title{Compute breaks for ratio scale}
\usage{
divmultBreaks(n = 6, nmin = 3, anchor = TRUE)
}
\arguments{
\item{n}{Scalar, target number of breaks}

\item{nmin}{Scalar, forced minimum number of breaks}

\item{anchor}{Logical, include origin (1 on the ratio scale)}
}
\value{
Vector of values to generate axis breaks
}
\description{
Compute breaks for ratio scale
}
\examples{
y <- exp(seq(-2,5, length.out = 10))
v <- log(y) # data or data range
n <- 5

# axisTicks takes giant steps, returns values way beyond data
grDevices::axisTicks(nint = n, log = TRUE, usr = range(v))
# divmultBreaks gives ~n breaks evenly within the data
divmultBreaks(n = n)(v = y)

# if 1 is lower limit, only positive log(breaks)
divmultBreaks()(c(1, 11))
# ditto, only negative log(breaks) if 1 is upper limit
divmultBreaks()(c(0.04, 1))

# expanding range on one side of 1 doesn't leave the other side behind
divmultBreaks()(c(0.04, 2.2))
divmultBreaks()(c(0.04, 220))
divmultBreaks()(c(0.04, 2200))

x <- 1:10
dat <- data.frame(x, y)
dat \%>\% ggplot2::ggplot(ggplot2::aes(x, y))+
     ggplot2::geom_point()+
     ggplot2::geom_hline(yintercept = 1, size = 0.2) +
     ggplot2::scale_y_continuous(
     trans = "log"
     , breaks = divmultBreaks()
     , labels = function(x){str2expression(print_operator(log(x)))}
     )
}
